name: Lint and Test

on:
  push:
    branches:
      - main

jobs:
  lint-with-PSScriptAnalyzer:
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Cache PowerShell Modules
        id: cacher
        uses: actions/cache@v3
        with:
          path: C:\Program Files\WindowsPowerShell\Modules
          key: ${{ runner.os }}-PSScriptAnalyzer-${{ hashFiles('Path/To/Dependencies/File') }}
          restore-keys: |
            ${{ runner.os }}-PSScriptAnalyzer-

      - name: Install PSScriptAnalyzer module
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -RequiredVersion '1.22.0' -ErrorAction Stop

      - name: Lint with PSScriptAnalyzer
        shell: pwsh
        run: |
          Invoke-ScriptAnalyzer -Path *.ps1 -Recurse -Outvariable issues
          $errors = $issues.Where({$_.Severity -eq 'Error'})
          if ($errors.Count -gt 0) {
            throw "There were $($errors.Count) errors."
          }
          
  pester-unit-tests:
    needs: lint-with-PSScriptAnalyzer
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Pester
        shell: pwsh
        run: |
          Install-Module -Name Pester -RequiredVersion '5.5.0' -Force -SkipPublisherCheck

      - name: Run Pester Tests
        shell: pwsh
        run: |
          Invoke-Pester -Script .\Get-ProjectCodeContent.Tests.ps1

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: windows-Unit-Tests
          path: .\TestResults.xml